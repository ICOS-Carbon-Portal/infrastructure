#!/usr/bin/env -S just --unstable --justfile

set positional-arguments
set shell := ['/bin/bash', '-cu']

export EDITOR := env_var_or_default("EDITOR", "emacsclient --no-wait")
export ANSIBLE_INVENTORY := "production.inventory"

vault := "./group_vars/all/vault.yml"



# META
@_default:
    just --unstable --list --unsorted --justfile {{justfile()}}

# edit this justfile
_edit:
    {{EDITOR}} {{canonicalize(justfile())}}

# create shim in order to get working directory right
@_install dest="~/.local/bin/icos":
    #!/usr/bin/env bash
    set -Eueo pipefail
    cat > {{dest}} <<EOF
    #!/usr/bin/env bash
    set -Eueo pipefail
    cd {{ justfile_directory() }}
    just --unstable "\$@"
    EOF
    chmod +x {{dest}}



# RECIPIES
# run a playbook
play playbook *args:
    #!/usr/bin/env bash
    set -Eueo pipefail
    # first try exact match; otherwise we won't be able to run a notebook for
    # which a glob would match several playbooks.
    playbook="{{playbook}}.yml"
    if [[ ! -e $playbook ]]; then
      playbook=($(compgen -G "*{{playbook}}*.yml")) || :
      case "${#playbook[@]}" in
        0) echo "Error: No file matches '*{{playbook}}*'"
           exit 1
           ;;
        1) # do nothing
           ;;
        *) echo "Error: More than one file matches '*{{playbook}}*'"
           exit 1
           ;;
      esac
    fi
    shift
    ansible-playbook $playbook "$@"

# run install playbook
install *args:
    ansible-playbook install.yml {{args}}

# run install playbook with upgrade_everything=1
upgrade *args:
    ansible-playbook install.yml -eupgrade_everything=1 {{args}}

# show facts about a host
facts host:
    ansible {{host}} -m setup



# ROOT KEYS
# show diff in proposed root_keys change
[group('keys and users')]
rootdiff *args:
    # the diffs are very verbose, only display the name of the key instead
    -icos play all -troot_keys -DC "$@" \
      | perl -ane 'print "$1 $2\n" if /^([+-])ssh\S+ \S+ (.*)$/; print "$_\n" if /^changed:/'

# deploy new root_keys
[group('keys and users')]
rootkeys *args="-DC":
    icos play all -troot_keys {{args}}



# VAULT
# edit the vault
[group('vault')]
vault:
    #!/usr/bin/env bash
    set -Eueo pipefail
    case "$EDITOR" in
        (*emacsclient*)
            # strip --no-wait
            export EDITOR=emacsclient
            ;;
    esac
    ansible-vault edit group_vars/all/vault.yml


# diff vault between REBASE_HEAD and HEAD
[group('vault')]
vault-conflict:
    diff -u \
         <(git show "HEAD:{{vault}}" | ansible-vault decrypt -) \
         <(ansible-vault decrypt "{{vault}}" --output -)\

# diff vault between HEAD and working copy
[group('vault')]
vault-diff:
    diff -u \
         <(git show "HEAD:{{vault}}" | ansible-vault decrypt -) \
         <(ansible-vault decrypt "{{vault}}" --output -)\



# MODULES
# nebula mesh vpn
[group('modules')]
mod nebula "files/nebula/justfile"
